# Copyright 2020 Manuel Calero <manuelcalero@xtendoo.es>
# License AGPL-3.0 or later (https://www.gnu.org/licenses/agpl.html).
# Explotaci√≥n

from odoo import _, fields, models


class FieldNotebookExploitation(models.Model):
    _name = 'field.notebook.exploitation'
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _description = 'Field Notebook Exploitation'

    name = fields.Char(
        string='Exploitation name',
        required=True,
        index=True,
        tracking=True,
    )
    business_name = fields.Char(
        string='Business name',
        index=True,
        tracking=True,
    )
    planting_date = fields.Date(
        string='Planting Date',
        index=True,
        tracking=True,
    )
    street = fields.Char(
        string='Street',
        compute='_compute_partner_address_values',
        readonly=False,
        store=True
    )
    street2 = fields.Char(
        string='Street2',
        compute='_compute_partner_address_values',
        readonly=False,
        store=True
    )
    zip = fields.Char(
        string='Zip',
        change_default=True,
        compute='_compute_partner_address_values',
        readonly=False,
        store=True
    )
    city = fields.Char(
        string='City',
        compute='_compute_partner_address_values',
        readonly=False,
        store=True
    )
    state_id = fields.Many2one(
        comodel_name='res.country.state',
        string='State',
        compute='_compute_partner_address_values',
        readonly=False,
        store=True,
        domain='[("country_id","=?",country_id)]',
    )
    country_id = fields.Many2one(
        string='Country',
        comodel_name='res.country',
        compute='_compute_partner_address_values',
        readonly=False,
        store=True
    )
    vat = fields.Char(
        string='Vat',
        index=True,
        tracking=True,
    )
    revision = fields.Boolean(
        default=False,
        string='Revision',
        index=True,
        tracking=True,
    )
    email = fields.Char(
        string='Email',
        index=True,
        tracking=True,
    )
    phone = fields.Char(
        string='Phone',
        index=True,
        tracking=True,
    )
    mobile = fields.Char(
        string='Mobile',
        index=True,
        tracking=True,
    )
    vulnerable_zone_id = fields.Many2one(
        comodel_name='field.notebook.vulnerable.zone',
        string='Vulnerable Zone',
        readonly=False,
        store=True,
    )
    parcel_ids = fields.One2many(
        comodel_name='field.notebook.exploitation.parcel',
        inverse_name='exploitation_id',
        string='Exploitation Parcel',
    )

class FieldNotebookExploitationParcel(models.Model):
    _name = 'field.notebook.exploitation.parcel'
    _description = 'Exploitation Parcel'

    parcel_id = fields.Many2one(
        comodel_name='field.notebook.parcel',
        string='Parcel',
        required=True,
        ondelete='cascade',
    )
    exploitation_id = fields.Many2one(
        comodel_name='field.notebook.exploitation',
        string='Exploitation',
        required=True,
        ondelete='cascade',
        index=True,
    )

    _sql_constraints = [
        (
            "parcel_uniq",
            "unique(parcel_id)",
            _("This parcel already exists in some exploitation !"),
        )
    ]
